INFO  20:37:53,517 - Compiling source file: E:\faks\sem7\pp\projekat1\workspace\MJCompiler\test\program.mj
INFO  20:37:53,566 - #2 program
INFO  20:37:53,566 - #39 test302
INFO  20:37:53,566 - #5 const
INFO  20:37:53,568 - #39 int
INFO  20:37:53,568 - #39 jedan
INFO  20:37:53,569 - #40 =
INFO  20:37:53,569 - #45 1
INFO  20:37:53,569 - #41 ;
INFO  20:37:53,570 - #39 int
INFO  20:37:53,571 - #39 i
INFO  20:37:53,571 - #41 ;
INFO  20:37:53,572 - #39 bool
INFO  20:37:53,573 - #39 ibool
INFO  20:37:53,574 - #41 ;
INFO  20:37:53,574 - #39 char
INFO  20:37:53,574 - #39 niz2
INFO  20:37:53,574 - #6 [
INFO  20:37:53,574 - #7 ]
INFO  20:37:53,574 - #41 ;
INFO  20:37:53,575 - #39 char
INFO  20:37:53,575 - #39 matrica
INFO  20:37:53,577 - #6 [
INFO  20:37:53,577 - #7 ]
INFO  20:37:53,577 - #6 [
INFO  20:37:53,577 - #7 ]
INFO  20:37:53,577 - #41 ;
INFO  20:37:53,577 - #39 char
INFO  20:37:53,577 - #39 niz
INFO  20:37:53,577 - #6 [
INFO  20:37:53,577 - #7 ]
INFO  20:37:53,577 - #41 ;
INFO  20:37:53,578 - #39 char
INFO  20:37:53,578 - #39 a
INFO  20:37:53,578 - #44 ,
INFO  20:37:53,578 - #39 curr
INFO  20:37:53,578 - #41 ;
INFO  20:37:53,578 - #3 {
INFO  20:37:53,578 - #39 int
INFO  20:37:53,579 - #39 sum
INFO  20:37:53,580 - #8 (
INFO  20:37:53,581 - #39 int
INFO  20:37:53,581 - #39 z
INFO  20:37:53,582 - #44 ,
INFO  20:37:53,583 - #39 int
INFO  20:37:53,583 - #39 d
INFO  20:37:53,583 - #9 )
INFO  20:37:53,584 - #3 {
INFO  20:37:53,585 - #42 return
INFO  20:37:53,586 - #39 z
INFO  20:37:53,586 - #12 +
INFO  20:37:53,587 - #39 d
INFO  20:37:53,588 - #41 ;
INFO  20:37:53,589 - #4 }
INFO  20:37:53,589 - #39 int
INFO  20:37:53,589 - #39 inkrement
INFO  20:37:53,589 - #8 (
INFO  20:37:53,589 - #39 int
INFO  20:37:53,589 - #39 a
INFO  20:37:53,590 - #44 ,
INFO  20:37:53,590 - #39 int
INFO  20:37:53,590 - #39 inc
INFO  20:37:53,590 - #9 )
INFO  20:37:53,590 - #39 int
INFO  20:37:53,590 - #39 pom
INFO  20:37:53,590 - #41 ;
INFO  20:37:53,590 - #3 {
INFO  20:37:53,590 - #27 if
INFO  20:37:53,590 - #8 (
INFO  20:37:53,591 - #39 inc
INFO  20:37:53,591 - #15 ==
INFO  20:37:53,591 - #39 jedan
INFO  20:37:53,592 - #9 )
INFO  20:37:53,593 - #39 pom
INFO  20:37:53,593 - #40 =
INFO  20:37:53,593 - #45 1
INFO  20:37:53,593 - #41 ;
INFO  20:37:53,593 - #26 else
INFO  20:37:53,593 - #27 if
INFO  20:37:53,594 - #8 (
INFO  20:37:53,594 - #39 inc
INFO  20:37:53,594 - #15 ==
INFO  20:37:53,594 - #45 2
INFO  20:37:53,594 - #9 )
INFO  20:37:53,594 - #39 pom
INFO  20:37:53,594 - #40 =
INFO  20:37:53,594 - #39 a
INFO  20:37:53,595 - #41 ;
INFO  20:37:53,595 - #42 return
INFO  20:37:53,595 - #39 sum
INFO  20:37:53,596 - #8 (
INFO  20:37:53,597 - #39 a
INFO  20:37:53,597 - #44 ,
INFO  20:37:53,597 - #39 pom
INFO  20:37:53,597 - #9 )
INFO  20:37:53,597 - #41 ;
INFO  20:37:53,598 - #4 }
INFO  20:37:53,598 - #39 bool
INFO  20:37:53,598 - #39 verify
INFO  20:37:53,598 - #8 (
INFO  20:37:53,598 - #9 )
INFO  20:37:53,598 - #3 {
INFO  20:37:53,599 - #35 print
INFO  20:37:53,599 - #8 (
INFO  20:37:53,599 - #47 v
INFO  20:37:53,599 - #9 )
INFO  20:37:53,600 - #41 ;
INFO  20:37:53,600 - #42 return
INFO  20:37:53,600 - #46 false
INFO  20:37:53,600 - #41 ;
INFO  20:37:53,600 - #4 }
INFO  20:37:53,600 - #34 void
INFO  20:37:53,600 - #39 main
INFO  20:37:53,601 - #8 (
INFO  20:37:53,602 - #9 )
INFO  20:37:53,602 - #3 {
INFO  20:37:53,602 - #39 niz
INFO  20:37:53,602 - #40 =
INFO  20:37:53,602 - #28 new
INFO  20:37:53,602 - #39 char
INFO  20:37:53,602 - #6 [
INFO  20:37:53,602 - #45 4
INFO  20:37:53,602 - #7 ]
INFO  20:37:53,602 - #41 ;
INFO  20:37:53,603 - #39 niz
INFO  20:37:53,603 - #6 [
INFO  20:37:53,603 - #45 0
INFO  20:37:53,603 - #7 ]
INFO  20:37:53,603 - #40 =
INFO  20:37:53,604 - #47 f
INFO  20:37:53,604 - #41 ;
INFO  20:37:53,604 - #39 niz
INFO  20:37:53,604 - #6 [
INFO  20:37:53,605 - #45 1
INFO  20:37:53,605 - #7 ]
INFO  20:37:53,605 - #40 =
INFO  20:37:53,605 - #47 a
INFO  20:37:53,605 - #41 ;
INFO  20:37:53,605 - #39 niz
INFO  20:37:53,605 - #6 [
INFO  20:37:53,605 - #45 2
INFO  20:37:53,605 - #7 ]
INFO  20:37:53,605 - #40 =
INFO  20:37:53,605 - #47 k
INFO  20:37:53,606 - #41 ;
INFO  20:37:53,606 - #39 niz
INFO  20:37:53,606 - #6 [
INFO  20:37:53,606 - #45 3
INFO  20:37:53,606 - #7 ]
INFO  20:37:53,606 - #40 =
INFO  20:37:53,606 - #47 s
INFO  20:37:53,606 - #41 ;
INFO  20:37:53,606 - #39 niz2
INFO  20:37:53,606 - #40 =
INFO  20:37:53,606 - #39 niz
INFO  20:37:53,606 - #24 .
INFO  20:37:53,606 - #32 map
INFO  20:37:53,607 - #8 (
INFO  20:37:53,607 - #39 curr
INFO  20:37:53,607 - #25 =>
INFO  20:37:53,607 - #47 x
INFO  20:37:53,608 - #9 )
INFO  20:37:53,608 - #41 ;
INFO  20:37:53,636 - #4 }
INFO  20:37:53,636 - #4 }
INFO  20:37:53,645 - Program(
  ProgName(
   test302
  ) [ProgName]
  ConstNoVar(
    ConstNoVar(
      ConstNoVar(
        ConstNoVar(
          ConstNoVar(
            ConstNoVar(
              ConstVardecl(
                NoConstVar(
                ) [NoConstVar]
                ConstDecl(
                  Type(
                   int
                  ) [Type]
                  NumConst(
                   jedan
                   1
                  ) [NumConst]
                  NoList(
                  ) [NoList]
                ) [ConstDecl]
              ) [ConstVardecl]
              VarDecl(
                Type(
                 int
                ) [Type]
                VarDeclNo(
                 i
                ) [VarDeclNo]
                NoBrackList(
                ) [NoBrackList]
              ) [VarDecl]
            ) [ConstNoVar]
            VarDecl(
              Type(
               bool
              ) [Type]
              VarDeclNo(
               ibool
              ) [VarDeclNo]
              NoBrackList(
              ) [NoBrackList]
            ) [VarDecl]
          ) [ConstNoVar]
          VarDecl(
            Type(
             char
            ) [Type]
            VarDeclGOne(
             niz2
            ) [VarDeclGOne]
            NoBrackList(
            ) [NoBrackList]
          ) [VarDecl]
        ) [ConstNoVar]
        VarDecl(
          Type(
           char
          ) [Type]
          VarDeclGTwo(
           matrica
          ) [VarDeclGTwo]
          NoBrackList(
          ) [NoBrackList]
        ) [VarDecl]
      ) [ConstNoVar]
      VarDecl(
        Type(
         char
        ) [Type]
        VarDeclGOne(
         niz
        ) [VarDeclGOne]
        NoBrackList(
        ) [NoBrackList]
      ) [VarDecl]
    ) [ConstNoVar]
    VarDecl(
      Type(
       char
      ) [Type]
      VarDeclNo(
       a
      ) [VarDeclNo]
      BrackListOne(
        NoBrackList(
        ) [NoBrackList]
        VarDeclNo(
         curr
        ) [VarDeclNo]
      ) [BrackListOne]
    ) [VarDecl]
  ) [ConstNoVar]
  MethodList(
    MethodList(
      MethodList(
        MethodList(
          NoMethodList(
          ) [NoMethodList]
          MethodDeclType(
            MethodDeclReturn(
              MethodReturnTypeType(
                Type(
                 int
                ) [Type]
              ) [MethodReturnTypeType]
             sum
            ) [MethodDeclReturn]
            FormParsListParams(
              FormPars(
                Type(
                 int
                ) [Type]
                FormParamDeclVarNo(
                 z
                ) [FormParamDeclVarNo]
                BrackListForm(
                  NoBrackListForm(
                  ) [NoBrackListForm]
                  Type(
                   int
                  ) [Type]
                  FormParamDeclVarNo(
                   d
                  ) [FormParamDeclVarNo]
                ) [BrackListForm]
              ) [FormPars]
            ) [FormParsListParams]
            NoVarL(
            ) [NoVarL]
            StatementListYes(
              NoStmt(
              ) [NoStmt]
              StatementRetExp(
                ExprAddop(
                  ExprNoMinus(
                    TermFactor(
                      FactorDesignator(
                        NoDesig(
                          DesigIdent(
                           z
                          ) [DesigIdent]
                        ) [NoDesig]
                      ) [FactorDesignator]
                    ) [TermFactor]
                  ) [ExprNoMinus]
                  AddopPlus(
                  ) [AddopPlus]
                  TermFactor(
                    FactorDesignator(
                      NoDesig(
                        DesigIdent(
                         d
                        ) [DesigIdent]
                      ) [NoDesig]
                    ) [FactorDesignator]
                  ) [TermFactor]
                ) [ExprAddop]
              ) [StatementRetExp]
            ) [StatementListYes]
          ) [MethodDeclType]
        ) [MethodList]
        MethodDeclType(
          MethodDeclReturn(
            MethodReturnTypeType(
              Type(
               int
              ) [Type]
            ) [MethodReturnTypeType]
           inkrement
          ) [MethodDeclReturn]
          FormParsListParams(
            FormPars(
              Type(
               int
              ) [Type]
              FormParamDeclVarNo(
               a
              ) [FormParamDeclVarNo]
              BrackListForm(
                NoBrackListForm(
                ) [NoBrackListForm]
                Type(
                 int
                ) [Type]
                FormParamDeclVarNo(
                 inc
                ) [FormParamDeclVarNo]
              ) [BrackListForm]
            ) [FormPars]
          ) [FormParsListParams]
          VarList(
            NoVarL(
            ) [NoVarL]
            VarDecl(
              Type(
               int
              ) [Type]
              VarDeclNo(
               pom
              ) [VarDeclNo]
              NoBrackList(
              ) [NoBrackList]
            ) [VarDecl]
          ) [VarList]
          StatementListYes(
            StatementListYes(
              NoStmt(
              ) [NoStmt]
              StatementIfElse(
                IFStart(
                ) [IFStart]
                IfCond(
                  CondTermOne(
                    CondFactOne(
                      CondFactRelop(
                        ExprNoMinus(
                          TermFactor(
                            FactorDesignator(
                              NoDesig(
                                DesigIdent(
                                 inc
                                ) [DesigIdent]
                              ) [NoDesig]
                            ) [FactorDesignator]
                          ) [TermFactor]
                        ) [ExprNoMinus]
                        RelopEqual(
                        ) [RelopEqual]
                        ExprNoMinus(
                          TermFactor(
                            FactorDesignator(
                              NoDesig(
                                DesigIdent(
                                 jedan
                                ) [DesigIdent]
                              ) [NoDesig]
                            ) [FactorDesignator]
                          ) [TermFactor]
                        ) [ExprNoMinus]
                      ) [CondFactRelop]
                    ) [CondFactOne]
                  ) [CondTermOne]
                ) [IfCond]
                DesignatorStatementOne(
                  DesignatorAsExpr(
                    DsignatorAss(
                      NoDesig(
                        DesigIdent(
                         pom
                        ) [DesigIdent]
                      ) [NoDesig]
                      ExprNoMinus(
                        TermFactor(
                          FactorNumConst(
                           1
                          ) [FactorNumConst]
                        ) [TermFactor]
                      ) [ExprNoMinus]
                    ) [DsignatorAss]
                  ) [DesignatorAsExpr]
                ) [DesignatorStatementOne]
                ELSEStart(
                ) [ELSEStart]
                StatementIf(
                  IFStart(
                  ) [IFStart]
                  IfCond(
                    CondTermOne(
                      CondFactOne(
                        CondFactRelop(
                          ExprNoMinus(
                            TermFactor(
                              FactorDesignator(
                                NoDesig(
                                  DesigIdent(
                                   inc
                                  ) [DesigIdent]
                                ) [NoDesig]
                              ) [FactorDesignator]
                            ) [TermFactor]
                          ) [ExprNoMinus]
                          RelopEqual(
                          ) [RelopEqual]
                          ExprNoMinus(
                            TermFactor(
                              FactorNumConst(
                               2
                              ) [FactorNumConst]
                            ) [TermFactor]
                          ) [ExprNoMinus]
                        ) [CondFactRelop]
                      ) [CondFactOne]
                    ) [CondTermOne]
                  ) [IfCond]
                  DesignatorStatementOne(
                    DesignatorAsExpr(
                      DsignatorAss(
                        NoDesig(
                          DesigIdent(
                           pom
                          ) [DesigIdent]
                        ) [NoDesig]
                        ExprNoMinus(
                          TermFactor(
                            FactorDesignator(
                              NoDesig(
                                DesigIdent(
                                 a
                                ) [DesigIdent]
                              ) [NoDesig]
                            ) [FactorDesignator]
                          ) [TermFactor]
                        ) [ExprNoMinus]
                      ) [DsignatorAss]
                    ) [DesignatorAsExpr]
                  ) [DesignatorStatementOne]
                  IfNoElse(
                  ) [IfNoElse]
                ) [StatementIf]
              ) [StatementIfElse]
            ) [StatementListYes]
            StatementRetExp(
              ExprNoMinus(
                TermFactor(
                  FactorFuncCall(
                    FactorFunc(
                      NoDesig(
                        DesigIdent(
                         sum
                        ) [DesigIdent]
                      ) [NoDesig]
                    ) [FactorFunc]
                    ActParsLista(
                      ListExpr(
                        ActParsOne(
                          ExprNoMinus(
                            TermFactor(
                              FactorDesignator(
                                NoDesig(
                                  DesigIdent(
                                   a
                                  ) [DesigIdent]
                                ) [NoDesig]
                              ) [FactorDesignator]
                            ) [TermFactor]
                          ) [ExprNoMinus]
                        ) [ActParsOne]
                        ExprNoMinus(
                          TermFactor(
                            FactorDesignator(
                              NoDesig(
                                DesigIdent(
                                 pom
                                ) [DesigIdent]
                              ) [NoDesig]
                            ) [FactorDesignator]
                          ) [TermFactor]
                        ) [ExprNoMinus]
                      ) [ListExpr]
                    ) [ActParsLista]
                  ) [FactorFuncCall]
                ) [TermFactor]
              ) [ExprNoMinus]
            ) [StatementRetExp]
          ) [StatementListYes]
        ) [MethodDeclType]
      ) [MethodList]
      MethodDeclType(
        MethodDeclReturn(
          MethodReturnTypeType(
            Type(
             bool
            ) [Type]
          ) [MethodReturnTypeType]
         verify
        ) [MethodDeclReturn]
        FormParsListNoParams(
        ) [FormParsListNoParams]
        NoVarL(
        ) [NoVarL]
        StatementListYes(
          StatementListYes(
            NoStmt(
            ) [NoStmt]
            StatementExpr(
              ExprNoMinus(
                TermFactor(
                  FactorCharConst(
                   v
                  ) [FactorCharConst]
                ) [TermFactor]
              ) [ExprNoMinus]
            ) [StatementExpr]
          ) [StatementListYes]
          StatementRetExp(
            ExprNoMinus(
              TermFactor(
                FactorBoolConst(
                 false
                ) [FactorBoolConst]
              ) [TermFactor]
            ) [ExprNoMinus]
          ) [StatementRetExp]
        ) [StatementListYes]
      ) [MethodDeclType]
    ) [MethodList]
    MethodDeclType(
      MethodDeclReturn(
        MethodReturnTypeVoid(
        ) [MethodReturnTypeVoid]
       main
      ) [MethodDeclReturn]
      FormParsListNoParams(
      ) [FormParsListNoParams]
      NoVarL(
      ) [NoVarL]
      StatementListYes(
        StatementListYes(
          StatementListYes(
            StatementListYes(
              StatementListYes(
                StatementListYes(
                  NoStmt(
                  ) [NoStmt]
                  DesignatorStatementOne(
                    DesignatorAsExpr(
                      DsignatorAss(
                        NoDesig(
                          DesigIdent(
                           niz
                          ) [DesigIdent]
                        ) [NoDesig]
                        ExprNoMinus(
                          TermFactor(
                            FactorNewBracket(
                              Type(
                               char
                              ) [Type]
                              ExprNoMinus(
                                TermFactor(
                                  FactorNumConst(
                                   4
                                  ) [FactorNumConst]
                                ) [TermFactor]
                              ) [ExprNoMinus]
                            ) [FactorNewBracket]
                          ) [TermFactor]
                        ) [ExprNoMinus]
                      ) [DsignatorAss]
                    ) [DesignatorAsExpr]
                  ) [DesignatorStatementOne]
                ) [StatementListYes]
                DesignatorStatementOne(
                  DesignatorAsExpr(
                    DsignatorAss(
                      DesigExprOne(
                        DesigIdent(
                         niz
                        ) [DesigIdent]
                        ExprNoMinus(
                          TermFactor(
                            FactorNumConst(
                             0
                            ) [FactorNumConst]
                          ) [TermFactor]
                        ) [ExprNoMinus]
                      ) [DesigExprOne]
                      ExprNoMinus(
                        TermFactor(
                          FactorCharConst(
                           f
                          ) [FactorCharConst]
                        ) [TermFactor]
                      ) [ExprNoMinus]
                    ) [DsignatorAss]
                  ) [DesignatorAsExpr]
                ) [DesignatorStatementOne]
              ) [StatementListYes]
              DesignatorStatementOne(
                DesignatorAsExpr(
                  DsignatorAss(
                    DesigExprOne(
                      DesigIdent(
                       niz
                      ) [DesigIdent]
                      ExprNoMinus(
                        TermFactor(
                          FactorNumConst(
                           1
                          ) [FactorNumConst]
                        ) [TermFactor]
                      ) [ExprNoMinus]
                    ) [DesigExprOne]
                    ExprNoMinus(
                      TermFactor(
                        FactorCharConst(
                         a
                        ) [FactorCharConst]
                      ) [TermFactor]
                    ) [ExprNoMinus]
                  ) [DsignatorAss]
                ) [DesignatorAsExpr]
              ) [DesignatorStatementOne]
            ) [StatementListYes]
            DesignatorStatementOne(
              DesignatorAsExpr(
                DsignatorAss(
                  DesigExprOne(
                    DesigIdent(
                     niz
                    ) [DesigIdent]
                    ExprNoMinus(
                      TermFactor(
                        FactorNumConst(
                         2
                        ) [FactorNumConst]
                      ) [TermFactor]
                    ) [ExprNoMinus]
                  ) [DesigExprOne]
                  ExprNoMinus(
                    TermFactor(
                      FactorCharConst(
                       k
                      ) [FactorCharConst]
                    ) [TermFactor]
                  ) [ExprNoMinus]
                ) [DsignatorAss]
              ) [DesignatorAsExpr]
            ) [DesignatorStatementOne]
          ) [StatementListYes]
          DesignatorStatementOne(
            DesignatorAsExpr(
              DsignatorAss(
                DesigExprOne(
                  DesigIdent(
                   niz
                  ) [DesigIdent]
                  ExprNoMinus(
                    TermFactor(
                      FactorNumConst(
                       3
                      ) [FactorNumConst]
                    ) [TermFactor]
                  ) [ExprNoMinus]
                ) [DesigExprOne]
                ExprNoMinus(
                  TermFactor(
                    FactorCharConst(
                     s
                    ) [FactorCharConst]
                  ) [TermFactor]
                ) [ExprNoMinus]
              ) [DsignatorAss]
            ) [DesignatorAsExpr]
          ) [DesignatorStatementOne]
        ) [StatementListYes]
        StatementMap(
          NoDesig(
            DesigIdent(
             niz2
            ) [DesigIdent]
          ) [NoDesig]
          NoDesig(
            DesigIdent(
             niz
            ) [DesigIdent]
          ) [NoDesig]
         curr
          EQGREStart(
          ) [EQGREStart]
          ExprNoMinus(
            TermFactor(
              FactorCharConst(
               x
              ) [FactorCharConst]
            ) [TermFactor]
          ) [ExprNoMinus]
          RPARENStart(
          ) [RPARENStart]
        ) [StatementMap]
      ) [StatementListYes]
    ) [MethodDeclType]
  ) [MethodList]
) [Program]
INFO  20:37:53,646 - ===================================
INFO  20:37:53,650 - Ime programa: test302 na liniji 3
INFO  20:37:53,650 - Pronadjen tip int na liniji 5
INFO  20:37:53,650 - Deklarisana konstanta: jedan = 1. na liniji 5
INFO  20:37:53,650 - Pronadjen tip int na liniji 7
INFO  20:37:53,650 - Deklarisana promenljiva i na liniji 7
INFO  20:37:53,650 - Pronadjen tip bool na liniji 8
INFO  20:37:53,651 - Deklarisana promenljiva ibool na liniji 8
INFO  20:37:53,651 - Pronadjen tip char na liniji 10
INFO  20:37:53,651 - Deklarisana promenljiva niz2 na liniji 10
INFO  20:37:53,651 - Pronadjen tip char na liniji 11
INFO  20:37:53,651 - Deklarisana promenljiva matrica na liniji 11
INFO  20:37:53,651 - Pronadjen tip char na liniji 12
INFO  20:37:53,651 - Deklarisana promenljiva niz na liniji 12
INFO  20:37:53,651 - Pronadjen tip char na liniji 13
INFO  20:37:53,651 - Deklarisana promenljiva a na liniji 13
INFO  20:37:53,651 - Deklarisana promenljiva curr na liniji 13
INFO  20:37:53,651 - Pronadjen tip int na liniji 17
INFO  20:37:53,651 - Deklarisana funkcija sum na liniji 17
INFO  20:37:53,651 - Pronadjen tip int na liniji 17
INFO  20:37:53,652 - Parametar z na liniji 17
INFO  20:37:53,652 - Pronadjen tip int na liniji 17
INFO  20:37:53,652 - Parametar d na liniji 17
INFO  20:37:53,652 - Pronadjen tip int na liniji 23
INFO  20:37:53,652 - Deklarisana funkcija inkrement na liniji 23
INFO  20:37:53,652 - Pronadjen tip int na liniji 23
INFO  20:37:53,652 - Parametar a na liniji 23
INFO  20:37:53,652 - Pronadjen tip int na liniji 23
INFO  20:37:53,652 - Parametar inc na liniji 23
INFO  20:37:53,652 - Pronadjen tip int na liniji 24
INFO  20:37:53,653 - Deklarisana promenljiva pom na liniji 24
INFO  20:37:53,653 - Dodela vrednosti na liniji 26
INFO  20:37:53,653 - Dodela vrednosti na liniji 27
INFO  20:37:53,653 - Pronadjen tip bool na liniji 32
INFO  20:37:53,653 - Deklarisana funkcija verify na liniji 32
INFO  20:37:53,653 - Deklarisana funkcija main na liniji 37
INFO  20:37:53,653 - Pronadjen tip char na liniji 39
INFO  20:37:53,653 - Dodela vrednosti na liniji 39
INFO  20:37:53,654 - Dodela vrednosti na liniji 40
INFO  20:37:53,654 - Dodela vrednosti na liniji 41
INFO  20:37:53,654 - Dodela vrednosti na liniji 42
INFO  20:37:53,654 - Dodela vrednosti na liniji 43
ERROR 20:37:53,654 - Greska! Izraz nije odgovarajuceg tipa na liniji 44
INFO  20:37:53,654 - ===================================
ERROR 20:37:53,655 - Parsiranje NIJE uspesno zavrseno!
