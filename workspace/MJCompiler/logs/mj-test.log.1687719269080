INFO  20:50:44,369 - Compiling source file: E:\faks\sem7\pp\projekat1\workspace\MJCompiler\test\program.mj
INFO  20:50:44,412 - #2 program
INFO  20:50:44,412 - #39 test302
INFO  20:50:44,412 - #5 const
INFO  20:50:44,413 - #39 int
INFO  20:50:44,413 - #39 jedan
INFO  20:50:44,414 - #40 =
INFO  20:50:44,414 - #45 1
INFO  20:50:44,415 - #41 ;
INFO  20:50:44,415 - #39 int
INFO  20:50:44,416 - #39 i
INFO  20:50:44,416 - #41 ;
INFO  20:50:44,417 - #39 bool
INFO  20:50:44,418 - #39 ibool
INFO  20:50:44,419 - #41 ;
INFO  20:50:44,419 - #39 char
INFO  20:50:44,419 - #39 niz2
INFO  20:50:44,419 - #6 [
INFO  20:50:44,419 - #7 ]
INFO  20:50:44,419 - #41 ;
INFO  20:50:44,419 - #39 char
INFO  20:50:44,419 - #39 matrica
INFO  20:50:44,422 - #6 [
INFO  20:50:44,422 - #7 ]
INFO  20:50:44,422 - #6 [
INFO  20:50:44,422 - #7 ]
INFO  20:50:44,422 - #41 ;
INFO  20:50:44,422 - #39 char
INFO  20:50:44,422 - #39 niz
INFO  20:50:44,422 - #6 [
INFO  20:50:44,423 - #7 ]
INFO  20:50:44,423 - #41 ;
INFO  20:50:44,423 - #39 char
INFO  20:50:44,423 - #39 a
INFO  20:50:44,423 - #44 ,
INFO  20:50:44,423 - #39 curr
INFO  20:50:44,423 - #41 ;
INFO  20:50:44,423 - #3 {
INFO  20:50:44,424 - #34 void
INFO  20:50:44,424 - #39 main
INFO  20:50:44,425 - #8 (
INFO  20:50:44,426 - #9 )
INFO  20:50:44,426 - #3 {
INFO  20:50:44,427 - #39 niz
INFO  20:50:44,428 - #40 =
INFO  20:50:44,429 - #28 new
INFO  20:50:44,429 - #39 char
INFO  20:50:44,429 - #6 [
INFO  20:50:44,429 - #45 4
INFO  20:50:44,429 - #7 ]
INFO  20:50:44,429 - #41 ;
INFO  20:50:44,430 - #39 niz
INFO  20:50:44,430 - #6 [
INFO  20:50:44,430 - #45 0
INFO  20:50:44,430 - #7 ]
INFO  20:50:44,430 - #40 =
INFO  20:50:44,431 - #47 f
INFO  20:50:44,431 - #41 ;
INFO  20:50:44,431 - #39 niz
INFO  20:50:44,431 - #6 [
INFO  20:50:44,431 - #45 1
INFO  20:50:44,431 - #7 ]
INFO  20:50:44,431 - #40 =
INFO  20:50:44,431 - #47 a
INFO  20:50:44,431 - #41 ;
INFO  20:50:44,432 - #39 niz
INFO  20:50:44,432 - #6 [
INFO  20:50:44,432 - #45 2
INFO  20:50:44,432 - #7 ]
INFO  20:50:44,432 - #40 =
INFO  20:50:44,432 - #47 k
INFO  20:50:44,432 - #41 ;
INFO  20:50:44,432 - #39 niz
INFO  20:50:44,432 - #6 [
INFO  20:50:44,432 - #45 3
INFO  20:50:44,432 - #7 ]
INFO  20:50:44,432 - #40 =
INFO  20:50:44,432 - #47 s
INFO  20:50:44,433 - #41 ;
INFO  20:50:44,433 - #39 niz2
INFO  20:50:44,433 - #40 =
INFO  20:50:44,433 - #39 niz
INFO  20:50:44,433 - #24 .
INFO  20:50:44,433 - #32 map
INFO  20:50:44,433 - #8 (
INFO  20:50:44,433 - #39 curr
INFO  20:50:44,433 - #25 =>
INFO  20:50:44,433 - #47 x
INFO  20:50:44,434 - #9 )
INFO  20:50:44,434 - #41 ;
INFO  20:50:44,434 - #4 }
INFO  20:50:44,435 - #4 }
INFO  20:50:44,440 - Program(
  ProgName(
   test302
  ) [ProgName]
  ConstNoVar(
    ConstNoVar(
      ConstNoVar(
        ConstNoVar(
          ConstNoVar(
            ConstNoVar(
              ConstVardecl(
                NoConstVar(
                ) [NoConstVar]
                ConstDecl(
                  Type(
                   int
                  ) [Type]
                  NumConst(
                   jedan
                   1
                  ) [NumConst]
                  NoList(
                  ) [NoList]
                ) [ConstDecl]
              ) [ConstVardecl]
              VarDecl(
                Type(
                 int
                ) [Type]
                VarDeclNo(
                 i
                ) [VarDeclNo]
                NoBrackList(
                ) [NoBrackList]
              ) [VarDecl]
            ) [ConstNoVar]
            VarDecl(
              Type(
               bool
              ) [Type]
              VarDeclNo(
               ibool
              ) [VarDeclNo]
              NoBrackList(
              ) [NoBrackList]
            ) [VarDecl]
          ) [ConstNoVar]
          VarDecl(
            Type(
             char
            ) [Type]
            VarDeclGOne(
             niz2
            ) [VarDeclGOne]
            NoBrackList(
            ) [NoBrackList]
          ) [VarDecl]
        ) [ConstNoVar]
        VarDecl(
          Type(
           char
          ) [Type]
          VarDeclGTwo(
           matrica
          ) [VarDeclGTwo]
          NoBrackList(
          ) [NoBrackList]
        ) [VarDecl]
      ) [ConstNoVar]
      VarDecl(
        Type(
         char
        ) [Type]
        VarDeclGOne(
         niz
        ) [VarDeclGOne]
        NoBrackList(
        ) [NoBrackList]
      ) [VarDecl]
    ) [ConstNoVar]
    VarDecl(
      Type(
       char
      ) [Type]
      VarDeclNo(
       a
      ) [VarDeclNo]
      BrackListOne(
        NoBrackList(
        ) [NoBrackList]
        VarDeclNo(
         curr
        ) [VarDeclNo]
      ) [BrackListOne]
    ) [VarDecl]
  ) [ConstNoVar]
  MethodList(
    NoMethodList(
    ) [NoMethodList]
    MethodDeclType(
      MethodDeclReturn(
        MethodReturnTypeVoid(
        ) [MethodReturnTypeVoid]
       main
      ) [MethodDeclReturn]
      FormParsListNoParams(
      ) [FormParsListNoParams]
      NoVarL(
      ) [NoVarL]
      StatementListYes(
        StatementListYes(
          StatementListYes(
            StatementListYes(
              StatementListYes(
                StatementListYes(
                  NoStmt(
                  ) [NoStmt]
                  DesignatorStatementOne(
                    DesignatorAsExpr(
                      DsignatorAss(
                        NoDesig(
                          DesigIdent(
                           niz
                          ) [DesigIdent]
                        ) [NoDesig]
                        ExprNoMinus(
                          TermFactor(
                            FactorNewBracket(
                              Type(
                               char
                              ) [Type]
                              ExprNoMinus(
                                TermFactor(
                                  FactorNumConst(
                                   4
                                  ) [FactorNumConst]
                                ) [TermFactor]
                              ) [ExprNoMinus]
                            ) [FactorNewBracket]
                          ) [TermFactor]
                        ) [ExprNoMinus]
                      ) [DsignatorAss]
                    ) [DesignatorAsExpr]
                  ) [DesignatorStatementOne]
                ) [StatementListYes]
                DesignatorStatementOne(
                  DesignatorAsExpr(
                    DsignatorAss(
                      DesigExprOne(
                        DesigIdent(
                         niz
                        ) [DesigIdent]
                        ExprNoMinus(
                          TermFactor(
                            FactorNumConst(
                             0
                            ) [FactorNumConst]
                          ) [TermFactor]
                        ) [ExprNoMinus]
                      ) [DesigExprOne]
                      ExprNoMinus(
                        TermFactor(
                          FactorCharConst(
                           f
                          ) [FactorCharConst]
                        ) [TermFactor]
                      ) [ExprNoMinus]
                    ) [DsignatorAss]
                  ) [DesignatorAsExpr]
                ) [DesignatorStatementOne]
              ) [StatementListYes]
              DesignatorStatementOne(
                DesignatorAsExpr(
                  DsignatorAss(
                    DesigExprOne(
                      DesigIdent(
                       niz
                      ) [DesigIdent]
                      ExprNoMinus(
                        TermFactor(
                          FactorNumConst(
                           1
                          ) [FactorNumConst]
                        ) [TermFactor]
                      ) [ExprNoMinus]
                    ) [DesigExprOne]
                    ExprNoMinus(
                      TermFactor(
                        FactorCharConst(
                         a
                        ) [FactorCharConst]
                      ) [TermFactor]
                    ) [ExprNoMinus]
                  ) [DsignatorAss]
                ) [DesignatorAsExpr]
              ) [DesignatorStatementOne]
            ) [StatementListYes]
            DesignatorStatementOne(
              DesignatorAsExpr(
                DsignatorAss(
                  DesigExprOne(
                    DesigIdent(
                     niz
                    ) [DesigIdent]
                    ExprNoMinus(
                      TermFactor(
                        FactorNumConst(
                         2
                        ) [FactorNumConst]
                      ) [TermFactor]
                    ) [ExprNoMinus]
                  ) [DesigExprOne]
                  ExprNoMinus(
                    TermFactor(
                      FactorCharConst(
                       k
                      ) [FactorCharConst]
                    ) [TermFactor]
                  ) [ExprNoMinus]
                ) [DsignatorAss]
              ) [DesignatorAsExpr]
            ) [DesignatorStatementOne]
          ) [StatementListYes]
          DesignatorStatementOne(
            DesignatorAsExpr(
              DsignatorAss(
                DesigExprOne(
                  DesigIdent(
                   niz
                  ) [DesigIdent]
                  ExprNoMinus(
                    TermFactor(
                      FactorNumConst(
                       3
                      ) [FactorNumConst]
                    ) [TermFactor]
                  ) [ExprNoMinus]
                ) [DesigExprOne]
                ExprNoMinus(
                  TermFactor(
                    FactorCharConst(
                     s
                    ) [FactorCharConst]
                  ) [TermFactor]
                ) [ExprNoMinus]
              ) [DsignatorAss]
            ) [DesignatorAsExpr]
          ) [DesignatorStatementOne]
        ) [StatementListYes]
        StatementMap(
          NoDesig(
            DesigIdent(
             niz2
            ) [DesigIdent]
          ) [NoDesig]
          NoDesig(
            DesigIdent(
             niz
            ) [DesigIdent]
          ) [NoDesig]
         curr
          EQGREStart(
          ) [EQGREStart]
          ExprNoMinus(
            TermFactor(
              FactorCharConst(
               x
              ) [FactorCharConst]
            ) [TermFactor]
          ) [ExprNoMinus]
          RPARENStart(
          ) [RPARENStart]
        ) [StatementMap]
      ) [StatementListYes]
    ) [MethodDeclType]
  ) [MethodList]
) [Program]
INFO  20:50:44,440 - ===================================
INFO  20:50:44,444 - Ime programa: test302 na liniji 3
INFO  20:50:44,444 - Pronadjen tip int na liniji 5
INFO  20:50:44,444 - Deklarisana konstanta: jedan = 1. na liniji 5
INFO  20:50:44,445 - Pronadjen tip int na liniji 7
INFO  20:50:44,445 - Deklarisana promenljiva i na liniji 7
INFO  20:50:44,445 - Pronadjen tip bool na liniji 8
INFO  20:50:44,445 - Deklarisana promenljiva ibool na liniji 8
INFO  20:50:44,445 - Pronadjen tip char na liniji 10
INFO  20:50:44,445 - Deklarisana promenljiva niz2 na liniji 10
INFO  20:50:44,445 - Pronadjen tip char na liniji 11
INFO  20:50:44,445 - Deklarisana promenljiva matrica na liniji 11
INFO  20:50:44,445 - Pronadjen tip char na liniji 12
INFO  20:50:44,445 - Deklarisana promenljiva niz na liniji 12
INFO  20:50:44,445 - Pronadjen tip char na liniji 13
INFO  20:50:44,445 - Deklarisana promenljiva a na liniji 13
INFO  20:50:44,445 - Deklarisana promenljiva curr na liniji 13
INFO  20:50:44,445 - Deklarisana funkcija main na liniji 18
INFO  20:50:44,445 - Pronadjen tip char na liniji 20
INFO  20:50:44,446 - Dodela vrednosti na liniji 20
INFO  20:50:44,446 - Dodela vrednosti na liniji 21
INFO  20:50:44,446 - Dodela vrednosti na liniji 22
INFO  20:50:44,446 - Dodela vrednosti na liniji 23
INFO  20:50:44,446 - Dodela vrednosti na liniji 24
ERROR 20:50:44,446 - Greska! Izraz nije odgovarajuceg tipa na liniji 25
INFO  20:50:44,446 - ===================================
ERROR 20:50:44,447 - Parsiranje NIJE uspesno zavrseno!
