// generated with ast extension for cup
// version 0.8
// 3/6/2023 14:4:12


package rs.ac.bg.etf.pp1.ast;

public interface Visitor { 

    public void visit(NumCharBool NumCharBool);
    public void visit(MethodDecl MethodDecl);
    public void visit(Mulop Mulop);
    public void visit(Relop Relop);
    public void visit(NumCharBoolList NumCharBoolList);
    public void visit(VarDeclL VarDeclL);
    public void visit(StatementList StatementList);
    public void visit(ConstVarDeclList ConstVarDeclList);
    public void visit(Addop Addop);
    public void visit(BracketListForm BracketListForm);
    public void visit(Factor Factor);
    public void visit(CondTerm CondTerm);
    public void visit(Designator Designator);
    public void visit(Term Term);
    public void visit(FormParamDeclVar FormParamDeclVar);
    public void visit(FormParsList FormParsList);
    public void visit(Condition Condition);
    public void visit(DsignatorAssign DsignatorAssign);
    public void visit(BracketList BracketList);
    public void visit(BrackDesig BrackDesig);
    public void visit(IfCondition IfCondition);
    public void visit(Label Label);
    public void visit(ActParsL ActParsL);
    public void visit(VarDeclList VarDeclList);
    public void visit(Expr Expr);
    public void visit(ActPars ActPars);
    public void visit(DesignatorStatement DesignatorStatement);
    public void visit(MethodReturnType MethodReturnType);
    public void visit(Statement Statement);
    public void visit(CondFact CondFact);
    public void visit(MethodDeclList MethodDeclList);
    public void visit(MulopMod MulopMod);
    public void visit(MulopDiv MulopDiv);
    public void visit(MulopMulti MulopMulti);
    public void visit(AddopMinus AddopMinus);
    public void visit(AddopPlus AddopPlus);
    public void visit(RelopLessEq RelopLessEq);
    public void visit(RelopLess RelopLess);
    public void visit(RelopGeEq RelopGeEq);
    public void visit(RelopGre RelopGre);
    public void visit(RelopNoEqual RelopNoEqual);
    public void visit(RelopEqual RelopEqual);
    public void visit(Assignop Assignop);
    public void visit(LabelIdent LabelIdent);
    public void visit(NoBrackDesig NoBrackDesig);
    public void visit(BrackDesigList BrackDesigList);
    public void visit(DesigIdent DesigIdent);
    public void visit(DesigExprDouble DesigExprDouble);
    public void visit(DesigExprOne DesigExprOne);
    public void visit(DesigError DesigError);
    public void visit(NoDesig NoDesig);
    public void visit(NoActParsL NoActParsL);
    public void visit(ActParsLista ActParsLista);
    public void visit(FactorFunc FactorFunc);
    public void visit(FactorExprExpr FactorExprExpr);
    public void visit(FactorExpr FactorExpr);
    public void visit(FactorNewBracket FactorNewBracket);
    public void visit(FactorBoolConst FactorBoolConst);
    public void visit(FactorCharConst FactorCharConst);
    public void visit(FactorNumConst FactorNumConst);
    public void visit(FactorFuncCall FactorFuncCall);
    public void visit(FactorDesignator FactorDesignator);
    public void visit(TermFactorMulop TermFactorMulop);
    public void visit(TermFactor TermFactor);
    public void visit(ExprNoMinus ExprNoMinus);
    public void visit(ExprAddop ExprAddop);
    public void visit(ExprMinus ExprMinus);
    public void visit(CondFactRelop CondFactRelop);
    public void visit(CondFactExpr CondFactExpr);
    public void visit(CondFactList CondFactList);
    public void visit(CondFactOne CondFactOne);
    public void visit(ANDStart ANDStart);
    public void visit(ORStart ORStart);
    public void visit(ListCondTerm ListCondTerm);
    public void visit(CondTermOne CondTermOne);
    public void visit(ErrorIfCond ErrorIfCond);
    public void visit(IfCond IfCond);
    public void visit(ListExpr ListExpr);
    public void visit(ActParsOne ActParsOne);
    public void visit(WhileCondition WhileCondition);
    public void visit(DesignatorExprError DesignatorExprError);
    public void visit(DsignatorAss DsignatorAss);
    public void visit(DesignatorMinusMinus DesignatorMinusMinus);
    public void visit(DesignatorPlusPlus DesignatorPlusPlus);
    public void visit(DesignatorFuncCall DesignatorFuncCall);
    public void visit(DesignatorAsExpr DesignatorAsExpr);
    public void visit(NoStmt NoStmt);
    public void visit(StatementListYes StatementListYes);
    public void visit(IfNoElse IfNoElse);
    public void visit(IFStart IFStart);
    public void visit(ELSEStart ELSEStart);
    public void visit(EQGREStart EQGREStart);
    public void visit(RPARENStart RPARENStart);
    public void visit(StatementListBrace StatementListBrace);
    public void visit(StatementMap StatementMap);
    public void visit(StatementPrint StatementPrint);
    public void visit(StatementExpr StatementExpr);
    public void visit(StatementRead StatementRead);
    public void visit(StatementRetExp StatementRetExp);
    public void visit(StatementReturn StatementReturn);
    public void visit(StatementContinue StatementContinue);
    public void visit(StatementBreak StatementBreak);
    public void visit(StatementWhile StatementWhile);
    public void visit(StatementIfElse StatementIfElse);
    public void visit(StatementIf StatementIf);
    public void visit(DesignatorStatementOne DesignatorStatementOne);
    public void visit(WHILEStart WHILEStart);
    public void visit(NoBrackListForm NoBrackListForm);
    public void visit(BrackListForm BrackListForm);
    public void visit(FormPars FormPars);
    public void visit(FormParsListNoParams FormParsListNoParams);
    public void visit(FormParsListParams FormParsListParams);
    public void visit(MethodReturnTypeVoid MethodReturnTypeVoid);
    public void visit(MethodReturnTypeType MethodReturnTypeType);
    public void visit(MethodDeclReturn MethodDeclReturn);
    public void visit(NoVarL NoVarL);
    public void visit(VarList VarList);
    public void visit(MethodDeclType MethodDeclType);
    public void visit(NoMethodList NoMethodList);
    public void visit(MethodList MethodList);
    public void visit(NoBrackList NoBrackList);
    public void visit(BrackListOne BrackListOne);
    public void visit(ErrorFormParams ErrorFormParams);
    public void visit(FormParamDeclVarTwo FormParamDeclVarTwo);
    public void visit(FormParamDeclVarOne FormParamDeclVarOne);
    public void visit(FormParamDeclVarNo FormParamDeclVarNo);
    public void visit(ErrorVarDecl ErrorVarDecl);
    public void visit(VarDeclGTwo VarDeclGTwo);
    public void visit(VarDeclGOne VarDeclGOne);
    public void visit(VarDeclNo VarDeclNo);
    public void visit(VarDecl VarDecl);
    public void visit(NoList NoList);
    public void visit(NumList NumList);
    public void visit(BoolConst BoolConst);
    public void visit(CharConst CharConst);
    public void visit(NumConst NumConst);
    public void visit(ConstDecl ConstDecl);
    public void visit(Type Type);
    public void visit(NoConstVar NoConstVar);
    public void visit(ConstNoVar ConstNoVar);
    public void visit(ConstVardecl ConstVardecl);
    public void visit(ProgName ProgName);
    public void visit(Program Program);

}
